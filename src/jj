<!-- import { Link } from "react-router-dom";

<section class="bg-white py-8 antialiased dark:bg-gray-900 md:py-16">
  <div class="mx-auto max-w-screen-xl px-4 2xl:px-0">
    <h2 class="text-xl font-semibold text-gray-900 dark:text-white sm:text-2xl">
      Shopping Cart
    </h2>

    <div class="mt-6 sm:mt-8 md:gap-6 lg:flex lg:items-start xl:gap-8">
      <div class="mx-auto w-full flex-none lg:max-w-2xl xl:max-w-4xl">
        <div class="space-y-6">
         
        </div>
      </div>
    </div>
  </div>
</section>;

<div class="rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-gray-700 dark:bg-gray-800 md:p-6">
<div class="space-y-4 md:flex md:items-center md:justify-between md:gap-6 md:space-y-0">
  <Link
    to={`/product/${cartItem.product.id}`}
    class="shrink-0 md:order-1">
    <img
      src={cartItem.product.imageCover}
      className="w-16 md:w-32 max-w-full max-h-full"
      alt={cartItem.product.title}
    />
  </Link>

  <label for="counter-input" class="sr-only">
    Choose quantity:
  </label>
  <div class="flex items-center justify-between md:order-3 md:justify-end">
    <div class="flex items-center">
      <button
        type="button"
        onClick={() => {
          handleUpdateItems(
            cartItem.product.id,
            cartItem.count - 1
          );
        }}
        id="decrement-button"
        data-input-counter-decrement="counter-input"
        class="inline-flex h-5 w-5 shrink-0 items-center
        justify-center rounded-md border border-gray-300 bg-gray-100
        hover:bg-gray-200 focus:outline-none focus:ring-2
        focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-700
        dark:hover:bg-gray-600 dark:focus:ring-gray-700">
        <svg
          class="h-2.5 w-2.5 text-gray-900 dark:text-white"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 18 2">
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 1h16"
          />
        </svg>
      </button>
      <div className="relative">
        {loadingProducts[cartItem.product.id] && (
          <div className="loading absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
            <i className="fas fa-spinner fa-spin text-black"></i>
          </div>
        )}
        <input
          type="number"
          id="first_product"
          class="w-10 shrink-0 border-0 bg-transparent text-center text-sm font-medium text-gray-900 focus:outline-none focus:ring-0 dark:text-white"
          value={
            loadingProducts[cartItem.product.id]
              ? ""
              : cartItem.count
          }
          disabled={true}
        />
      </div>

      <button
        type="button"
        onClick={() => {
          handleUpdateItems(
            cartItem.product.id,
            cartItem.count + 1
          );
        }}
        id="increment-button"
        data-input-counter-increment="counter-input"
        class="inline-flex h-5 w-5 shrink-0 items-center justify-center rounded-md border border-gray-300 bg-gray-100 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-700 dark:hover:bg-gray-600 dark:focus:ring-gray-700">
        <svg
          class="h-2.5 w-2.5 text-gray-900 dark:text-white"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 18 18">
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 1v16M1 9h16"
          />
        </svg>
      </button>
    </div>
    <div class="text-end md:order-4 md:w-32">
      <p class="text-base font-bold text-gray-900 dark:text-white">
        ${cartItem.price * cartItem.count}
      </p>
    </div>
  </div>

  <div class="w-full min-w-0 flex-1 space-y-4 md:order-2 md:max-w-md">
    <Link
      to={`/product/${cartItem.product.id}`}
      href="#"
      class="text-base font-medium text-gray-900 hover:underline dark:text-white">
      {cartItem.product.title.split(" ").slice(0, 5).join(" ")}
    </Link>

    <div class="flex items-center gap-4">
      <button
        type="button"
        class="inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-900 hover:underline dark:text-gray-400 dark:hover:text-white">
        <svg
          class="me-1.5 h-5 w-5"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          fill="none"
          viewBox="0 0 24 24">
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12.01 6.001C6.5 1 1 8 5.782 13.001L12.011 20l6.23-7C23 8 17.5 1 12.01 6.002Z"
          />
        </svg>
        Add to Favorites
      </button>

      <button
        onClick={() => handleRemoveItems(cartItem.product.id)}
        type="button"
        class="inline-flex items-center text-sm font-medium text-red-600 hover:underline dark:text-red-500">
        <svg
          class="me-1.5 h-5 w-5"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          fill="none"
          viewBox="0 0 24 24">
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18 17.94 6M18 18 6.06 6"
          />
        </svg>
        <i class="fa-solid fa-trash-can"></i>
      </button>
    </div>
  </div>
</div>
</div>



























<section class="bg-white py-8 antialiased dark:bg-gray-900 md:py-16">
      <div class="mx-auto max-w-screen-xl px-4 2xl:px-0">
        <h2 class="text-xl font-semibold text-gray-900 dark:text-white sm:text-2xl">
          Shopping Cart
        </h2>

        <div class="mt-6 sm:mt-8 md:gap-6 lg:flex lg:items-start xl:gap-8">
          <div class="mx-auto w-full flex-none lg:max-w-2xl xl:max-w-4xl">
            <div class="space-y-6">
              {userCart.data &&
                userCart?.numOfCartItems > 0 &&
                userCart?.data?.products.map((cartItem) => (
                  <div class="rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-gray-700 dark:bg-gray-800 md:p-6">
                    <div class="space-y-4 md:flex md:items-center md:justify-between md:gap-6 md:space-y-0">
                      <div className="img-title   min-w-[200px] md:gap-5 md:flex-col-reverse md:items-start sm:flex items-center gap-5">
                        <Link
                          to={`/product/${cartItem.product.id}`}
                          class="shrink-0 md:order-1 mb-4">
                          <img
                            src={cartItem.product.imageCover}
                            className="w-16 md:mb-0 mb-6 md:w-32 max-w-full max-h-full"
                            alt={cartItem.product.title}
                          />
                        </Link>
                        <Link
                          to={`/product/${cartItem.product.id}`}
                          href="#"
                          class="   font-medium text-gray-900 hover:underline dark:text-white">
                          {cartItem.product.title
                            .split(" ")
                            .slice(0, 3)
                            .join(" ")}
                        </Link>
                      </div>

                      <label for="counter-input" class="sr-only">
                        Choose quantity:
                      </label>
                      <div class="md:flex-row-reverse md:items-center md:text-start md:gap-20 flex-1  sm:flex items-center sm:justify-between md:order-2 md:justify-start">
                        <div class="flex items-center">
                          <button
                            type="button"
                            onClick={() => {
                              handleUpdateItems(
                                cartItem.product.id,
                                cartItem.count - 1
                              );
                            }}
                            id="decrement-button"
                            data-input-counter-decrement="counter-input"
                            class="inline-flex h-5 w-5 shrink-0 items-center
        justify-center rounded-md border border-gray-300 bg-gray-100
        hover:bg-gray-200 focus:outline-none focus:ring-2
        focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-700
        dark:hover:bg-gray-600 dark:focus:ring-gray-700">
                            <svg
                              class="h-2.5 w-2.5 text-gray-900 dark:text-white"
                              aria-hidden="true"
                              xmlns="http://www.w3.org/2000/svg"
                              fill="none"
                              viewBox="0 0 18 2">
                              <path
                                stroke="currentColor"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M1 1h16"
                              />
                            </svg>
                          </button>
                          <div className="relative">
                            {loadingProducts[cartItem.product.id] && (
                              <div className="loading absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
                                <i className="fas fa-spinner fa-spin text-black"></i>
                              </div>
                            )}
                            <input
                              type="number"
                              id="first_product"
                              class="w-10 shrink-0 border-0 ps-[10px] bg-transparent text-center text-sm font-medium text-gray-900 focus:outline-none focus:ring-0 dark:text-white"
                              value={
                                loadingProducts[cartItem.product.id]
                                  ? ""
                                  : cartItem.count
                              }
                              disabled={true}
                            />
                          </div>

                          <button
                            type="button"
                            onClick={() => {
                              handleUpdateItems(
                                cartItem.product.id,
                                cartItem.count + 1
                              );
                            }}
                            id="increment-button"
                            data-input-counter-increment="counter-input"
                            class="inline-flex h-5 w-5 shrink-0 items-center justify-center rounded-md border border-gray-300 bg-gray-100 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-700 dark:hover:bg-gray-600 dark:focus:ring-gray-700">
                            <svg
                              class="h-2.5 w-2.5 text-gray-900 dark:text-white"
                              aria-hidden="true"
                              xmlns="http://www.w3.org/2000/svg"
                              fill="none"
                              viewBox="0 0 18 18">
                              <path
                                stroke="currentColor"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M9 1v16M1 9h16"
                              />
                            </svg>
                          </button>
                        </div>
                        <div class="text-end md:text-start md:order-4 md:w-32">
                          <p class="text-base font-bold text-gray-900 dark:text-white">
                            ${cartItem.price * cartItem.count}
                          </p>
                        </div>
                      </div>

                      <div class="w-full sm:block min-w-0 flex-1 pt-3 md:order-3 md:max-w-md">
                        <div class="flex justify-end items-center gap-5">
                          <button
                            type="button"
                            class="inline-flex items-center text-sm font-medium text-black">
                            <i class="fa-regular fa-heart text-[20px]"></i>
                          </button>

                          <button
                            disabled={isRemoving[cartItem.product.id]}
                            onClick={() =>
                              handleRemoveItems(cartItem.product.id)
                            }
                            type="button"
                            class="inline-flex items-center text-sm font-medium text-red-600  dark:text-red-500">
                            {isRemoving[cartItem.product.id] ? (
                              <i class="fa-solid fa-spinner fa-spin text-[19px]"></i>
                            ) : (
                              <i class="fa-solid fa-trash-can text-[20px]"></i>
                            )}
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
            </div>
          </div>
        </div>
      </div>
    </section>